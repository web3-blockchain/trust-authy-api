/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../common';
import type {
  ExampleERC721Upgradeable,
  ExampleERC721UpgradeableInterface,
} from '../../src/ExampleERC721Upgradeable';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorNotAllowed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MINTER_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_defaultAdmin',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_royaltyReceiver',
        type: 'address',
      },
      {
        internalType: 'uint96',
        name: '_royaltyFeeNumerator',
        type: 'uint96',
      },
      {
        internalType: 'address',
        name: '_purchaseToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_tokenPrice',
        type: 'uint256',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_uri',
        type: 'string',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_uri',
        type: 'string',
      },
    ],
    name: 'mintTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_uri',
        type: 'string',
      },
    ],
    name: 'purchase',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'purchaseToken',
    outputs: [
      {
        internalType: 'contract IERC20Upgradeable',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'salePrice',
        type: 'uint256',
      },
    ],
    name: 'royaltyInfo',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint96',
        name: 'feeNumerator',
        type: 'uint96',
      },
    ],
    name: 'setDefaultRoyalty',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: '_newUri',
        type: 'string',
      },
    ],
    name: 'setTokenURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tokenPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawERC20Tokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50612ba7806100206000396000f3fe608060405234801561001057600080fd5b50600436106101ef5760003560e01c806342966c681161010f578063a22cb465116100a2578063d539139311610071578063d539139314610442578063d547741f14610457578063d85d3d271461046a578063e985e9c51461047d57600080fd5b8063a22cb465146103f5578063a95c4d6214610408578063b88d4fde1461041c578063c87b56dd1461042f57600080fd5b80637ff9b596116100de5780637ff9b596146103c857806391d14854146103d257806395d89b41146103e5578063a217fddf146103ed57600080fd5b806342966c681461037c57806359f5e0ce1461038f5780636352211e146103a257806370a08231146103b557600080fd5b8063248a9ca31161018757806333c946da1161015657806333c946da1461034657806336568abe1461034e5780633ccfd60b1461036157806342842e0e1461036957600080fd5b8063248a9ca3146102bd5780632a55205a146102ee5780632bb60f30146103205780632f2ff15d1461033357600080fd5b8063081812fc116101c3578063081812fc14610259578063095ea7b314610284578063162094c41461029757806323b872dd146102aa57600080fd5b806275a317146101f457806301ffc9a71461020957806304634d8d1461023157806306fdde0314610244575b600080fd5b6102076102023660046121c0565b6104b9565b005b61021c610217366004612229565b6104e3565b60405190151581526020015b60405180910390f35b61020761023f36600461225d565b61050f565b61024c610529565b60405161022891906122e0565b61026c6102673660046122f3565b6105bb565b6040516001600160a01b039091168152602001610228565b61020761029236600461230c565b6105e2565b6102076102a5366004612336565b6105f6565b6102076102b8366004612369565b610628565b6102e06102cb3660046122f3565b600090815260c9602052604090206001015490565b604051908152602001610228565b6103016102fc3660046123a5565b610653565b604080516001600160a01b039093168352602083019190915201610228565b61020761032e366004612473565b610701565b610207610341366004612523565b61088f565b6102076108b4565b61020761035c366004612523565b6109e6565b610207610a60565b610207610377366004612369565b610ab1565b61020761038a3660046122f3565b610ad6565b61020761039d366004612546565b610b6b565b61026c6103b03660046122f3565b610c33565b6102e06103c3366004612588565b610c93565b6102e06101305481565b61021c6103e0366004612523565b610d19565b61024c610d44565b6102e0600081565b6102076104033660046125b1565b610d53565b61012f5461026c906001600160a01b031681565b61020761042a3660046125e8565b610d67565b61024c61043d3660046122f3565b610d8d565b6102e0600080516020612b5283398151915281565b610207610465366004612523565b610e93565b610207610478366004612546565b610eb8565b61021c61048b366004612664565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b600080516020612b528339815191526104d181610eda565b6104dc848484610ee4565b5050505050565b60006104ee82610f60565b8061050957506001600160e01b0319821663152a902d60e11b145b92915050565b600061051a81610eda565b6105248383610f85565b505050565b6060606580546105389061268e565b80601f01602080910402602001604051908101604052809291908181526020018280546105649061268e565b80156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b5050505050905090565b60006105c682611082565b506000908152606960205260409020546001600160a01b031690565b816105ec816110e1565b610524838361119a565b600080516020612b5283398151915261060e81610eda565b600084815261012e602052604090206104dc83858361270e565b826001600160a01b038116331461064257610642336110e1565b61064d8484846112aa565b50505050565b60008281526098602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916106c85750604080518082019091526097546001600160a01b0381168252600160a01b90046001600160601b031660208201525b6020810151600090612710906106e7906001600160601b0316876127e4565b6106f191906127fb565b91519350909150505b9250929050565b600054610100900460ff16158080156107215750600054600160ff909116105b8061073b5750303b15801561073b575060005460ff166001145b6107a35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156107c6576000805461ff0019166101001790555b6107ce6112db565b6107d6611304565b6107e08888611333565b6107e86112db565b6107f0611364565b6107fb6000876113aa565b610813600080516020612b52833981519152876113aa565b61081d858561050f565b61012f80546001600160a01b0319166001600160a01b0385161790556101308290558015610885576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b600082815260c960205260409020600101546108aa81610eda565b61052483836113b0565b60006108bf81610eda565b61012f546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092d919061281d565b61012f5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a49190612836565b6109e25760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161079a565b5050565b6001600160a01b0381163314610a565760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161079a565b6109e28282611436565b6000610a6b81610eda565b610a7361149d565b6040514790339082156108fc029083906000818181858888f19350505050158015610aa2573d6000803e3d6000fd5b5050610aae600160fb55565b50565b826001600160a01b0381163314610acb57610acb336110e1565b61064d8484846114fd565b610ae03382611518565b80610afe5750610afe600080516020612b5283398151915233610d19565b610b4a5760405162461bcd60e51b815260206004820181905260248201527f43616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564604482015260640161079a565b610b5381611597565b600081815261012e60205260408120610aae91612114565b61012f54610130546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec9190612836565b610c295760405162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b604482015260640161079a565b610524828261162c565b6000818152606760205260408120546001600160a01b0316806105095760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161079a565b60006001600160a01b038216610cfd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161079a565b506001600160a01b031660009081526068602052604090205490565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060606680546105389061268e565b81610d5d816110e1565b61052483836116a1565b836001600160a01b0381163314610d8157610d81336110e1565b6104dc858585856116ac565b6000818152606760205260409020546060906001600160a01b0316610df45760405162461bcd60e51b815260206004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e00604482015260640161079a565b600082815261012e602052604090208054610e0e9061268e565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3a9061268e565b8015610e875780601f10610e5c57610100808354040283529160200191610e87565b820191906000526020600020905b815481529060010190602001808311610e6a57829003601f168201915b50505050509050919050565b600082815260c96020526040902060010154610eae81610eda565b6105248383611436565b600080516020612b52833981519152610ed081610eda565b61064d838361162c565b610aae81336116de565b6000610ef561012d80546001019055565b5061012d5481610f345760405162461bcd60e51b815260206004820152600a60248201526932b6b83a3c903ab9349760b11b604482015260640161079a565b600081815261012e60205260409020610f4e83858361270e565b50610f598482611737565b9392505050565b60006001600160e01b03198216637965db0b60e01b1480610509575061050982611751565b6127106001600160601b0382161115610ff35760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b606482015260840161079a565b6001600160a01b0382166110495760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c696420726563656976657200000000000000604482015260640161079a565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217609755565b6000818152606760205260409020546001600160a01b0316610aae5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161079a565b6daaeb6d7670e522a718067333cd4e3b15610aae57604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa15801561114e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111729190612836565b610aae57604051633b79c77360e21b81526001600160a01b038216600482015260240161079a565b60006111a582610c33565b9050806001600160a01b0316836001600160a01b0316036112125760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161079a565b336001600160a01b038216148061122e575061122e813361048b565b6112a05760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161079a565b6105248383611776565b6112b43382611518565b6112d05760405162461bcd60e51b815260040161079a90612853565b6105248383836117e4565b600054610100900460ff166113025760405162461bcd60e51b815260040161079a906128a0565b565b600054610100900460ff1661132b5760405162461bcd60e51b815260040161079a906128a0565b611302611948565b600054610100900460ff1661135a5760405162461bcd60e51b815260040161079a906128a0565b6109e2828261196f565b600054610100900460ff1661138b5760405162461bcd60e51b815260040161079a906128a0565b611302733cc6cdda760b79bafa08df41ecfa224f810dceb660016119af565b6109e282825b6113ba8282610d19565b6109e257600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff191660011790556113f23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6114408282610d19565b156109e257600082815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600260fb54036114ef5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161079a565b600260fb55565b600160fb55565b61052483838360405180602001604052806000815250610d67565b60008061152483610c33565b9050806001600160a01b0316846001600160a01b0316148061156b57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b8061158f5750836001600160a01b0316611584846105bb565b6001600160a01b0316145b949350505050565b60006115a282610c33565b90506115ad82610c33565b600083815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526068845282852080546000190190558785526067909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600061163d61012d80546001019055565b5061012d548161167c5760405162461bcd60e51b815260206004820152600a60248201526932b6b83a3c903ab9349760b11b604482015260640161079a565b600081815261012e6020526040902061169683858361270e565b506105093382611737565b6109e2338383611b56565b6116b63383611518565b6116d25760405162461bcd60e51b815260040161079a90612853565b61064d84848484611c24565b6116e88282610d19565b6109e2576116f581611c57565b611700836020611c69565b6040516020016117119291906128eb565b60408051601f198184030181529082905262461bcd60e51b825261079a916004016122e0565b6109e2828260405180602001604052806000815250611e05565b60006001600160e01b0319821663152a902d60e11b1480610509575061050982611e38565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906117ab82610c33565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b826001600160a01b03166117f782610c33565b6001600160a01b03161461181d5760405162461bcd60e51b815260040161079a90612960565b6001600160a01b03821661187f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161079a565b826001600160a01b031661189282610c33565b6001600160a01b0316146118b85760405162461bcd60e51b815260040161079a90612960565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff166114f65760405162461bcd60e51b815260040161079a906128a0565b600054610100900460ff166119965760405162461bcd60e51b815260040161079a906128a0565b60656119a283826129a5565b50606661052482826129a5565b600054610100900460ff166119d65760405162461bcd60e51b815260040161079a906128a0565b6daaeb6d7670e522a718067333cd4e3b156109e25760405163c3c5a54760e01b81523060048201526daaeb6d7670e522a718067333cd4e9063c3c5a547906024016020604051808303816000875af1158015611a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5a9190612836565b6109e2578015611ad657604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b158015611aba57600080fd5b505af1158015611ace573d6000803e3d6000fd5b505050505050565b6001600160a01b03821615611b255760405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af290390604401611aa0565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401611aa0565b816001600160a01b0316836001600160a01b031603611bb75760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161079a565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611c2f8484846117e4565b611c3b84848484611e88565b61064d5760405162461bcd60e51b815260040161079a90612a65565b60606105096001600160a01b03831660145b60606000611c788360026127e4565b611c83906002612ab7565b67ffffffffffffffff811115611c9b57611c9b6123c7565b6040519080825280601f01601f191660200182016040528015611cc5576020820181803683370190505b509050600360fc1b81600081518110611ce057611ce0612aca565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d0f57611d0f612aca565b60200101906001600160f81b031916908160001a9053506000611d338460026127e4565b611d3e906001612ab7565b90505b6001811115611db6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d7257611d72612aca565b1a60f81b828281518110611d8857611d88612aca565b60200101906001600160f81b031916908160001a90535060049490941c93611daf81612ae0565b9050611d41565b508315610f595760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161079a565b611e0f8383611f89565b611e1c6000848484611e88565b6105245760405162461bcd60e51b815260040161079a90612a65565b60006001600160e01b031982166380ac58cd60e01b1480611e6957506001600160e01b03198216635b5e139f60e01b145b8061050957506301ffc9a760e01b6001600160e01b0319831614610509565b60006001600160a01b0384163b15611f7e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ecc903390899088908890600401612af7565b6020604051808303816000875af1925050508015611f07575060408051601f3d908101601f19168201909252611f0491810190612b34565b60015b611f64573d808015611f35576040519150601f19603f3d011682016040523d82523d6000602084013e611f3a565b606091505b508051600003611f5c5760405162461bcd60e51b815260040161079a90612a65565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061158f565b506001949350505050565b6001600160a01b038216611fdf5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161079a565b6000818152606760205260409020546001600160a01b0316156120445760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161079a565b6000818152606760205260409020546001600160a01b0316156120a95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161079a565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5080546121209061268e565b6000825580601f10612130575050565b601f016020900490600052602060002090810190610aae91905b8082111561215e576000815560010161214a565b5090565b80356001600160a01b038116811461217957600080fd5b919050565b60008083601f84011261219057600080fd5b50813567ffffffffffffffff8111156121a857600080fd5b6020830191508360208285010111156106fa57600080fd5b6000806000604084860312156121d557600080fd5b6121de84612162565b9250602084013567ffffffffffffffff8111156121fa57600080fd5b6122068682870161217e565b9497909650939450505050565b6001600160e01b031981168114610aae57600080fd5b60006020828403121561223b57600080fd5b8135610f5981612213565b80356001600160601b038116811461217957600080fd5b6000806040838503121561227057600080fd5b61227983612162565b915061228760208401612246565b90509250929050565b60005b838110156122ab578181015183820152602001612293565b50506000910152565b600081518084526122cc816020860160208601612290565b601f01601f19169290920160200192915050565b602081526000610f5960208301846122b4565b60006020828403121561230557600080fd5b5035919050565b6000806040838503121561231f57600080fd5b61232883612162565b946020939093013593505050565b60008060006040848603121561234b57600080fd5b83359250602084013567ffffffffffffffff8111156121fa57600080fd5b60008060006060848603121561237e57600080fd5b61238784612162565b925061239560208501612162565b9150604084013590509250925092565b600080604083850312156123b857600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156123f8576123f86123c7565b604051601f8501601f19908116603f01168101908282118183101715612420576124206123c7565b8160405280935085815286868601111561243957600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261246457600080fd5b610f59838335602085016123dd565b600080600080600080600060e0888a03121561248e57600080fd5b873567ffffffffffffffff808211156124a657600080fd5b6124b28b838c01612453565b985060208a01359150808211156124c857600080fd5b506124d58a828b01612453565b9650506124e460408901612162565b94506124f260608901612162565b935061250060808901612246565b925061250e60a08901612162565b915060c0880135905092959891949750929550565b6000806040838503121561253657600080fd5b8235915061228760208401612162565b6000806020838503121561255957600080fd5b823567ffffffffffffffff81111561257057600080fd5b61257c8582860161217e565b90969095509350505050565b60006020828403121561259a57600080fd5b610f5982612162565b8015158114610aae57600080fd5b600080604083850312156125c457600080fd5b6125cd83612162565b915060208301356125dd816125a3565b809150509250929050565b600080600080608085870312156125fe57600080fd5b61260785612162565b935061261560208601612162565b925060408501359150606085013567ffffffffffffffff81111561263857600080fd5b8501601f8101871361264957600080fd5b612658878235602084016123dd565b91505092959194509250565b6000806040838503121561267757600080fd5b61268083612162565b915061228760208401612162565b600181811c908216806126a257607f821691505b6020821081036126c257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561052457600081815260208120601f850160051c810160208610156126ef5750805b601f850160051c820191505b81811015611ace578281556001016126fb565b67ffffffffffffffff831115612726576127266123c7565b61273a83612734835461268e565b836126c8565b6000601f84116001811461276e57600085156127565750838201355b600019600387901b1c1916600186901b1783556104dc565b600083815260209020601f19861690835b8281101561279f578685013582556020948501946001909201910161277f565b50868210156127bc5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610509576105096127ce565b60008261281857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561282f57600080fd5b5051919050565b60006020828403121561284857600080fd5b8151610f59816125a3565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612923816017850160208801612290565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612954816028840160208801612290565b01602801949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b815167ffffffffffffffff8111156129bf576129bf6123c7565b6129d3816129cd845461268e565b846126c8565b602080601f831160018114612a0857600084156129f05750858301515b600019600386901b1c1916600185901b178555611ace565b600085815260208120601f198616915b82811015612a3757888601518255948401946001909101908401612a18565b5085821015612a555787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b80820180821115610509576105096127ce565b634e487b7160e01b600052603260045260246000fd5b600081612aef57612aef6127ce565b506000190190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612b2a908301846122b4565b9695505050505050565b600060208284031215612b4657600080fd5b8151610f598161221356fe9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a2646970667358221220f71072218678b7902b36da17aaabde4f3cbf5941805bfcff0ee369053c6a149f64736f6c63430008120033';

type ExampleERC721UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleERC721UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleERC721Upgradeable__factory extends ContractFactory {
  constructor(...args: ExampleERC721UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExampleERC721Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ExampleERC721Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExampleERC721Upgradeable {
    return super.attach(address) as ExampleERC721Upgradeable;
  }
  override connect(signer: Signer): ExampleERC721Upgradeable__factory {
    return super.connect(signer) as ExampleERC721Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleERC721UpgradeableInterface {
    return new utils.Interface(_abi) as ExampleERC721UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleERC721Upgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExampleERC721Upgradeable;
  }
}
