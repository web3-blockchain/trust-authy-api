/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../common';
import type {
  ERC721TokenFactoryUpgradeable,
  ERC721TokenFactoryUpgradeableInterface,
} from '../../src/ERC721TokenFactoryUpgradeable';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'TokenDeployed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'defaultAdmin',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'royaltyReceiver',
        type: 'address',
      },
      {
        internalType: 'uint96',
        name: 'royaltyFeeNumerator',
        type: 'uint96',
      },
    ],
    name: 'createERC721Token',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'logic_',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newLogic',
        type: 'address',
      },
    ],
    name: 'setLogic',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a06040523060805234801561001457600080fd5b5060805161186861004c600039600081816101ee0152818161023a015281816102e20152818161032501526103c101526118686000f3fe608060405260043610620000915760003560e01c80637185700011620000605780637185700014620001175780637b8afefb146200013c5780638da5cb5b146200017a578063c4d66de8146200019a578063f2fde38b14620001bf57600080fd5b80633659cfe614620000965780634f1ef28614620000bd57806352d1902d14620000d4578063715018a614620000ff575b600080fd5b348015620000a357600080fd5b50620000bb620000b536600462000c93565b620001e4565b005b620000bb620000ce36600462000d44565b620002d8565b348015620000e157600080fd5b50620000ec620003b4565b6040519081526020015b60405180910390f35b3480156200010c57600080fd5b50620000bb6200046a565b3480156200012457600080fd5b50620000bb6200013636600462000c93565b62000482565b3480156200014957600080fd5b50620001616200015b36600462000dd0565b620004ae565b6040516001600160a01b039091168152602001620000f6565b3480156200018757600080fd5b506033546001600160a01b031662000161565b348015620001a757600080fd5b50620000bb620001b936600462000c93565b620005a5565b348015620001cc57600080fd5b50620000bb620001de36600462000c93565b620006da565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620002385760405162461bcd60e51b81526004016200022f9062000e87565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662000283600080516020620017ec833981519152546001600160a01b031690565b6001600160a01b031614620002ac5760405162461bcd60e51b81526004016200022f9062000ed3565b620002b78162000756565b60408051600080825260208201909252620002d59183919062000760565b50565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620003235760405162461bcd60e51b81526004016200022f9062000e87565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166200036e600080516020620017ec833981519152546001600160a01b031690565b6001600160a01b031614620003975760405162461bcd60e51b81526004016200022f9062000ed3565b620003a28262000756565b620003b08282600162000760565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620004565760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016200022f565b50600080516020620017ec83398151915290565b62000474620008dd565b62000480600062000939565b565b6200048c620008dd565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b600080632bb60f3060e01b8787878787604051602401620004d495949392919062000f73565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260655491519092506000916001600160a01b0316908390620005289062000c68565b6200053592919062000fd4565b604051809103906000f08015801562000552573d6000803e3d6000fd5b509050806001600160a01b03167fcbceb2a71186186f122db5bab7bde42a9ae01fdb01216247c5532f66cea8aaef89896040516200059292919062000ffa565b60405180910390a2979650505050505050565b600054610100900460ff1615808015620005c65750600054600160ff909116105b80620005e25750303b158015620005e2575060005460ff166001145b620006475760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200022f565b6000805460ff1916600117905580156200066b576000805461ff0019166101001790555b620006756200098b565b606580546001600160a01b0319166001600160a01b0384161790558015620003b0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b620006e4620008dd565b6001600160a01b0381166200074b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200022f565b620002d58162000939565b620002d5620008dd565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156200079b576200079683620009bf565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015620007f8575060408051601f3d908101601f19168201909252620007f5918101906200102c565b60015b6200085d5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016200022f565b600080516020620017ec8339815191528114620008cf5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016200022f565b506200079683838362000a5e565b6033546001600160a01b03163314620004805760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200022f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620009b55760405162461bcd60e51b81526004016200022f9062001046565b6200048062000a8f565b6001600160a01b0381163b62000a2e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200022f565b600080516020620017ec83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b62000a698362000ac4565b60008251118062000a775750805b15620007965762000a89838362000b06565b50505050565b600054610100900460ff1662000ab95760405162461bcd60e51b81526004016200022f9062001046565b620004803362000939565b62000acf81620009bf565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606062000b2e83836040518060600160405280602781526020016200180c6027913962000b35565b9392505050565b6060600080856001600160a01b03168560405162000b54919062001091565b600060405180830381855af49150503d806000811462000b91576040519150601f19603f3d011682016040523d82523d6000602084013e62000b96565b606091505b509150915062000ba98683838762000bb3565b9695505050505050565b6060831562000c2757825160000362000c1f576001600160a01b0385163b62000c1f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200022f565b508162000c33565b62000c33838362000c3b565b949350505050565b81511562000c4c5781518083602001fd5b8060405162461bcd60e51b81526004016200022f9190620010af565b61072780620010c583390190565b80356001600160a01b038116811462000c8e57600080fd5b919050565b60006020828403121562000ca657600080fd5b62000b2e8262000c76565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111562000ce55762000ce562000cb1565b604051601f8501601f19908116603f0116810190828211818310171562000d105762000d1062000cb1565b8160405280935085815286868601111562000d2a57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121562000d5857600080fd5b62000d638362000c76565b9150602083013567ffffffffffffffff81111562000d8057600080fd5b8301601f8101851362000d9257600080fd5b62000da38582356020840162000cc7565b9150509250929050565b600082601f83011262000dbf57600080fd5b62000b2e8383356020850162000cc7565b600080600080600060a0868803121562000de957600080fd5b853567ffffffffffffffff8082111562000e0257600080fd5b62000e1089838a0162000dad565b9650602088013591508082111562000e2757600080fd5b5062000e368882890162000dad565b94505062000e476040870162000c76565b925062000e576060870162000c76565b915060808601356bffffffffffffffffffffffff8116811462000e7957600080fd5b809150509295509295909350565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60005b8381101562000f3c57818101518382015260200162000f22565b50506000910152565b6000815180845262000f5f81602086016020860162000f1f565b601f01601f19169290920160200192915050565b60a08152600062000f8860a083018862000f45565b828103602084015262000f9c818862000f45565b6001600160a01b039687166040850152949095166060830152506bffffffffffffffffffffffff919091166080909101529392505050565b6001600160a01b038316815260406020820181905260009062000c339083018462000f45565b6040815260006200100f604083018562000f45565b828103602084015262001023818562000f45565b95945050505050565b6000602082840312156200103f57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251620010a581846020870162000f1f565b9190910192915050565b60208152600062000b2e602083018462000f4556fe608060405260405161072738038061072783398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610700602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b6102bb806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025f602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516100e0919061020f565b600060405180830381855af49150503d806000811461011b576040519150601f19603f3d011682016040523d82523d6000602084013e610120565b606091505b50915091506101318683838761013b565b9695505050505050565b606083156101af5782516000036101a8576001600160a01b0385163b6101a85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b50816101b9565b6101b983836101c1565b949350505050565b8151156101d15781518083602001fd5b8060405162461bcd60e51b815260040161019f919061022b565b60005b838110156102065781810151838201526020016101ee565b50506000910152565b600082516102218184602087016101eb565b9190910192915050565b602081526000825180602084015261024a8160408501602087016101eb565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220eadb3f48a33ed3e9e66c6f7b465401411d1058c071ebc26992e468a5ebd3b1e064736f6c63430008120033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205c2a0b3620223124fe585151b4deee747d82e948e5ec91d0b4f409b7ec42333064736f6c63430008120033';

type ERC721TokenFactoryUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TokenFactoryUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721TokenFactoryUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC721TokenFactoryUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721TokenFactoryUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC721TokenFactoryUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721TokenFactoryUpgradeable {
    return super.attach(address) as ERC721TokenFactoryUpgradeable;
  }
  override connect(signer: Signer): ERC721TokenFactoryUpgradeable__factory {
    return super.connect(signer) as ERC721TokenFactoryUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TokenFactoryUpgradeableInterface {
    return new utils.Interface(_abi) as ERC721TokenFactoryUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721TokenFactoryUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721TokenFactoryUpgradeable;
  }
}
